import jsPDF from 'jspdf';
import { WorkoutPlan, ClientProfile } from '../types';

export async function generatePDF(workoutPlan: WorkoutPlan, clientProfile: ClientProfile): Promise<void> {
  const pdf = new jsPDF();
  const pageWidth = pdf.internal.pageSize.getWidth();
  const pageHeight = pdf.internal.pageSize.getHeight();
  let yPosition = 20;

  // Header
  pdf.setFontSize(24);
  pdf.setFont('helvetica', 'bold');
  pdf.text('DEJIMBA WORKOUT SCRIPT', pageWidth / 2, yPosition, { align: 'center' });
  
  yPosition += 15;
  pdf.setFontSize(16);
  pdf.setFont('helvetica', 'normal');
  pdf.text(workoutPlan.planName, pageWidth / 2, yPosition, { align: 'center' });

  yPosition += 20;

  // Client Information
  pdf.setFontSize(14);
  pdf.setFont('helvetica', 'bold');
  pdf.text('CLIENT INFORMATION', 20, yPosition);
  
  yPosition += 10;
  pdf.setFontSize(10);
  pdf.setFont('helvetica', 'normal');
  pdf.text(`Name: ${clientProfile.name}`, 20, yPosition);
  pdf.text(`Age: ${clientProfile.age}`, 120, yPosition);
  
  yPosition += 6;
  pdf.text(`Fitness Level: ${clientProfile.fitnessLevel}`, 20, yPosition);
  pdf.text(`Duration: ${clientProfile.workoutDuration} min`, 120, yPosition);
  
  yPosition += 6;
  pdf.text(`Goals: ${clientProfile.goals.join(', ')}`, 20, yPosition);
  
  yPosition += 15;

  // Workout Days
  for (const [dayIndex, day] of workoutPlan.workoutDays.entries()) {
    // Check if we need a new page
    if (yPosition > pageHeight - 60) {
      pdf.addPage();
      yPosition = 20;
    }

    // Day Header
    pdf.setFontSize(14);
    pdf.setFont('helvetica', 'bold');
    pdf.text(`${day.day.toUpperCase()} - ${day.focus.toUpperCase()}`, 20, yPosition);
    
    yPosition += 10;

    // Exercises
    for (const [exerciseIndex, workoutExercise] of day.exercises.entries()) {
      // Check if we need a new page
      if (yPosition > pageHeight - 40) {
        pdf.addPage();
        yPosition = 20;
      }

      pdf.setFontSize(12);
      pdf.setFont('helvetica', 'bold');
      pdf.text(`${exerciseIndex + 1}. ${workoutExercise.exercise.name}`, 25, yPosition);
      
      yPosition += 6;
      pdf.setFontSize(10);
      pdf.setFont('helvetica', 'normal');
      
      // Exercise details
      const details = `${workoutExercise.sets} sets Ã— ${workoutExercise.reps} reps | Rest: ${workoutExercise.rest}`;
      pdf.text(details, 30, yPosition);
      
      yPosition += 5;
      
      // Instructions (truncated for PDF)
      const instruction = workoutExercise.exercise.instructions[0];
      if (instruction) {
        const wrappedText = pdf.splitTextToSize(instruction, pageWidth - 60);
        pdf.text(wrappedText, 30, yPosition);
        yPosition += wrappedText.length * 4;
      }
      
      yPosition += 8;
    }
    
    yPosition += 10;
  }

  // Footer
  if (yPosition > pageHeight - 30) {
    pdf.addPage();
    yPosition = 20;
  }

  pdf.setFontSize(8);
  pdf.setFont('helvetica', 'italic');
  pdf.text('Generated by Dejimba Workout Script Generator', pageWidth / 2, pageHeight - 15, { align: 'center' });
  pdf.text(`Created on ${new Date().toLocaleDateString()}`, pageWidth / 2, pageHeight - 10, { align: 'center' });

  // Save the PDF
  pdf.save(`${clientProfile.name.replace(/\s+/g, '_')}_Workout_Plan.pdf`);
}